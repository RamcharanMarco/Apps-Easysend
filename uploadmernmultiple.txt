import {useState} from 'react'
import { useStore } from '../store/store'
import {useNavigate} from 'react-router-dom'
import axios from 'axios'


export const useAddProject = () =>{
    const [error, setError] = useState<any>('')
    const [loading, setLoading] = useState<any>(false)

    const {user} = useStore()
    const navigate = useNavigate()

    const addCar = async(
        photos:string[],name:string,description:string,repo:string,
        ) =>{
        demo:string,type:string,lib:string,lang:string,db:string,css:string,hosting:string
            const body = {photos,,name,description,repo,demo,type,lib,lang,db,css,hosting}
            try{
                setLoading(true)
                setError(null)
                const response = await axios.post('http://localhost:5000/api/cars/',body, {
                    headers: {
                        'Content-Type': 'multipart/form-data',
                        'Authorization' : `Bearer ${user.token}`
                      },
                })
                const json = await response.data
                setError(false)
                navigate(`/user/${user.user._id}/projects`)
          }catch(error){
              console.log(error)
              setError(true)
          }
          finally{
              setLoading(false)
          }
    }

    return {addCar, loading, error}
}

also allow user to view all the images they selected
#########################################################################################################




const storage = multer.diskStorage({
    destination: function(req, file, cb) {
        cb(null, 'images');
    },
    filename: function(req, file, cb) {   
        cb(null,uuidv4() + '-' + Date.now() + path.extname(file.originalname));
    }
});

const fileFilter = (req, file, cb) => {
    /*const allowedFileTypes = ['image/jpeg', 'image/jpg', 'image/png'];*/
    const allowedFileTypes = ['image/jpeg', 'image/jpg', 'image/png'];
    if(allowedFileTypes.includes(file.mimetype)) {
        cb(null, true);
    } else {
        cb(null, false);
    }
}

let upload = multer({ storage, fileFilter });


router.post('/',upload.single('photo'), async(req, res) => {
    const user_id = req.user._id
    const url = req.protocol + '://' + req.get('host')
    const {name,arr,description,repo,demo,type,lib,lang,db,css,hosting} = req.body
    const photo = url + '/images/' + req.file.filename;
try{
    const project = await Project.create({user_id,arr,photo,name,description,repo,demo,type,lib,lang,db,css,hosting})
    res.status(200).json(project)
    console.log(project)
}catch(error){
    res.status(400).json({error : error.message})
    console.log(error)
}
});


#############################################################################

const storage = multer.diskStorage({
    destination: function(req, file, cb) {
        cb(null, 'images');
    },
    filename: function(req, file, cb) {   
        cb(null,uuidv4() + '-' + Date.now() + path.extname(file.originalname));
    }
});


let upload = multer({ storage});


router.post('/resumephoto',upload.array('multi-files'), async(req, res) => {
    const user_id = req.user._id
    const url = req.protocol + '://' + req.get('host')
    const photoslist = req.files
    const imagepathslist = []
    photoList = photosList.forEach((img) => image.path = url+'/images/'+img.filename);

    photosList.forEach((img) => (
        try{
    const resume = await Photo.create({...img})
    res.status(200).json(resume)
    console.log(resume)
}catch(error){
    res.status(400).json({error : error.message})
    console.log(error)
}
    )
    );
});



